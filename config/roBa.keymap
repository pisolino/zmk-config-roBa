#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q      &kp W         &kp E             &kp R                        &kp T                                                            &kp Y               &kp U  &lt 5 I    &kp O    &mt MINUS P
&mt TAB A         &kp S         &kp D             &kp F                        &kp G                   &kp ESCAPE              &kp SQT          &kp H               &kp J  &kp K      &kp L    &mt LEFT_CONTROL SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V                        &kp B                   &lt 4 BACKSLASH         &kp MINUS        &kp N               &kp M  &kp COMMA  &kp DOT  &mt LEFT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt_to_layer_0 1 LANG_HANJA  &mt LEFT_COMMAND LANG2  &mt LEFT_SHIFT SPACE    &lt 3 BACKSPACE  &lt 2 LANG_HANGEUL                             &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                        &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans       &trans    &trans      &trans       &trans    &trans      &trans     &trans         &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans           &trans       &trans    &trans      &trans       &trans    &kp EQUAL   &trans     &trans         &trans        &trans                &trans
&trans           &trans       &trans    &trans      &trans       &trans    &kp DELETE  &trans                                                        &trans
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                     &kp NUMBER_6  &kp N7        &kp N8        &kp N9         &kp N0
&trans        &trans        &trans        &trans        &trans  &kp LC(LA(KP_NUMBER_0))    &trans  &kp HOME      &kp LEFT      &kp UP_ARROW  &kp RIGHT      &kp END
&trans        &trans        &trans        &trans        &trans  &kp GRAVE                  &trans  &trans        &kp LG(LEFT)  &kp DOWN      &kp LG(RIGHT)  &trans
&trans        &trans        &trans        &trans        &trans  &trans                     &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                    &kp F6  &kp F7        &kp F8            &kp F9         &kp F10
&kp F11  &kp F12  &trans  &trans  &trans  &trans    &trans  &trans  &kp LG(LEFT)  &kp LG(UP_ARROW)  &kp LG(RIGHT)  &trans
&trans   &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans        &kp LG(DOWN)      &trans         &trans
&trans   &trans   &trans  &trans  &trans  &trans    &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mo 5     &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &mkp MB3  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
