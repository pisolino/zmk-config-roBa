#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <180>;
};

&lt {
    quick-tap-ms = <180>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";
        timeout-ms = <75>;

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <6 7>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };

        enter_sub {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
        };

        BT_layer {
            bindings = <&mo 6>;
            key-positions = <37 39>;
        };
    };

    macros {
        rep_space: rep_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &key_repeat>;
            label = "REP_SPACE";
        };

        rep_backspace: rep_backspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE &key_repeat>;
            label = "REP_BACKSPACE";
        };

        mo4_command: mouse_command {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 4 &kp LEFT_COMMAND>, <&macro_press>;

            label = "MOUSE_COMMAND";
        };
    };

    behaviors {
        td_space: td_space {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SPACE";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&rep_space>;
        };

        kp_and_kp: kp_and_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_AND_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        td_backspace: td_backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&rep_backspace>;
        };

        layer_kp: layer_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        td_command_lang2_mouse: td_command_lang2_mouse {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COMMAND_LANG2_MOUSE";
            #binding-cells = <0>;
            bindings = <&mt LEFT_GUI LANGUAGE_2>, <&mo4_command>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q        &kp W               &kp E                   &kp R        &kp T                                                                            &kp Y        &kp U  &kp I      &kp O               &mt MINUS P
&mt LEFT_CONTROL A  &kp S               &kp D                   &kp F        &kp G                    &kp ESCAPE                       &kp SINGLE_QUOTE       &kp H        &kp J  &kp K      &mt SINGLE_QUOTE L  &mt LEFT_CONTROL SEMICOLON
&mt LEFT_SHIFT Z    &kp X               &kp C                   &kp V        &kp B                    &lt 4 GRAVE                      &kp TAB                &kp N        &kp M  &kp COMMA  &kp DOT             &mt LEFT_SHIFT SLASH
&kp LCTRL           &mt LEFT_ALT LANG1  &mt LEFT_COMMAND LANG2  &lt 1 LANG2  &td_command_lang2_mouse  &kp_and_kp LEFT_SHIFT SPACE      &layer_kp 3 BACKSPACE  &lt 2 LANG1                                        &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                           &kp LCTRL         &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp TAB          &kp LS(TAB)  &trans    &trans      &trans       &trans      &trans       &trans            &kp MINUS      &kp EQUAL     &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans           &trans       &trans    &trans      &trans       &trans      &kp LS(TAB)  &trans            &trans         &trans        &trans                &kp BACKSLASH
&trans           &trans       &trans    &trans      &trans       &trans      &kp DELETE   &kp LEFT_COMMAND                                                     &trans
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1      &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp N5                         &kp NUMBER_6  &kp N7        &kp N8        &kp N9         &kp N0
&kp LEFT_CONTROL  &trans        &trans        &trans            &trans  &trans         &trans  &kp HOME      &kp LEFT      &kp UP_ARROW  &kp RIGHT      &kp LCTRL
&trans            &trans        &trans        &trans            &trans  &kp GRAVE      &trans  &kp END       &kp LG(LEFT)  &kp DOWN      &kp LG(RIGHT)  &trans
&trans            &trans        &trans        &kp LEFT_COMMAND  &trans  &trans         &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                      &kp F6  &kp F7        &kp F8            &kp F9         &kp F10
&kp F11  &kp F12  &trans  &trans  &trans  &trans      &trans  &trans  &kp LG(LEFT)  &kp LG(UP_ARROW)  &kp LG(RIGHT)  &trans
&trans   &trans   &trans  &trans  &trans  &trans      &trans  &trans  &trans        &kp LG(DOWN)      &trans         &trans
&trans   &trans   &trans  &trans  &trans  &trans      &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans   &trans       &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&kp TAB  &kp LS(TAB)  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5     &mkp MB2  &trans
&trans   &trans       &trans  &trans  &trans  &trans      &trans  &trans  &trans    &mkp MB3  &trans    &trans
&trans   &trans       &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
